{
  "name": "processing-vscode",
  "version": "2.5.4",
  "private": true,
  "description": "Processing Language Support for VSCode",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/Luke-zhang-04/processing-vscode.git"
  },
  "homepage": "https://github.com/Luke-zhang-04/processing-vscode",
  "bugs": "https://github.com/Luke-zhang-04/processing-vscode/issues",
  "main": "./processing-vscode.js",
  "engines": {
    "vscode": "^1.80.0"
  },
  "scripts": {
    "prebuild": "npm install",
    "build": "node esbuild.config.js",
    "deploy": "npx @vscode/vsce publish",
    "format": "prettier . --write",
    "lint": "eslint --ext ts src --max-warnings 0",
    "package": "npm run build && npx @vscode/vsce package",
    "vscode:prepublish": "npm run build"
  },
  "keywords": [
    "processing",
    "pde",
    "processing.py",
    "processing-python",
    "language",
    "snippets",
    "diagnostics",
    "runner"
  ],
  "devDependencies": {
    "@types/node": "^22.15.18",
    "@types/vscode": "^1.80.0",
    "@vscode/vsce": "^3.3.2",
    "esbuild": "^0.25.4",
    "eslint": "^9.26.0",
    "prettier": "^3.5.3",
    "typescript": "^5.8.3",
    "yaml": "^2.7.1"
  },
  "activationEvents": [
    "onLanguage:pde",
    "onLanguage:python"
  ],
  "categories": [
    "Programming Languages",
    "Snippets"
  ],
  "contributes": {
    "commands": [
      {
        "command": "processing.Run",
        "title": "Processing: Run Open Processing Project",
        "enablement": "resourceLangId == python || resourceLangId == pde"
      },
      {
        "command": "processing.RunPy",
        "title": "Processing: Run Open Processing Python Project",
        "icon": "./images/play-arrow-with-logo.svg",
        "enablement": "resourceLangId == python && config.processing.py.isEnabled"
      },
      {
        "command": "processing.RunJava",
        "title": "Processing: Run Open Processing Java Project",
        "icon": "./images/play-arrow.svg",
        "enablement": "resourceLangId == pde"
      },
      {
        "command": "processing.OpenExtensionDocumentation",
        "title": "Processing: Open Extension Documentation",
        "enablement": "resourceLangId == pde"
      },
      {
        "command": "processing.OpenDocs",
        "title": "Processing: Open Documentation for Selection",
        "enablement": "resourceLangId == pde || resourceLangId == python && config.processing.py.isEnabled"
      },
      {
        "command": "processing.SearchWebsite",
        "title": "Processing: Search Processing Website",
        "enablement": "resourceLangId == pde || resourceLangId == python && config.processing.py.isEnabled"
      }
    ],
    "languages": [
      {
        "id": "pde",
        "aliases": [
          "Processing",
          "pde"
        ],
        "extensions": [
          ".pde"
        ],
        "configuration": "./pde.configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "pde",
        "scopeName": "source.pde",
        "path": "./syntaxes/pde.tmLanguage.json"
      }
    ],
    "snippets": [
      {
        "language": "pde",
        "path": "./snippets/snippets.json"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "when": "editorHasSelection && editorLangId == 'pde'",
          "command": "processing.OpenDocs",
          "group": "navigation@1"
        },
        {
          "when": "resourceLangId == pde",
          "command": "processing.RunJava",
          "group": "navigation"
        },
        {
          "when": "resourceLangId == python && config.processing.py.isEnabled",
          "command": "processing.RunPy",
          "group": "navigation"
        }
      ],
      "editor/title": [
        {
          "when": "resourceLangId == pde",
          "command": "processing.RunJava",
          "group": "navigation"
        },
        {
          "when": "resourceLangId == python && config.processing.py.isEnabled",
          "command": "processing.RunPy",
          "group": "navigation"
        }
      ]
    },
    "configuration": {
      "type": "object",
      "title": "Processing",
      "properties": {
        "processing.processingPath": {
          "type": "string",
          "default": "processing",
          "description": "Path to Processing executable. For Processing 4+, the extension will automatically add 'cli' when needed. Just enter the path to the `processing` executable. Example: `/usr/bin/processing` for Unix, or `C:\\Program Files\\processing-4.0\\processing` for Windows."
        },
        "processing.docs": {
          "type": "string",
          "default": "auto",
          "enum": [
            "processing.org",
            "p5js.org",
            "py.processing.org",
            "auto"
          ],
          "enumDescriptions": [
            "Use processing.org for documentation",
            "Use p5js for documentation",
            "Use py.processing.org for documentation",
            "Automatically determine either processing.org or py.processing.org (never p5js) depending on the current file"
          ],
          "description": "Which documentation this extension should use"
        },
        "processing.search": {
          "type": "string",
          "default": "Google",
          "enum": [
            "Google",
            "DuckDuckGo"
          ],
          "enumDescriptions": [
            "Use Google to search documentation",
            "Use DuckDuckGo to search documentation"
          ],
          "description": "Which search engine should this extension use?"
        },
        "processing.shouldGiveDiagnostics": {
          "type": "boolean",
          "default": false,
          "description": "If the extension should provide diagnostics (via processing-java). Note that this feature is quite slow."
        },
        "processing.shouldSendSigint": {
          "type": "boolean",
          "default": false,
          "description": "If the extension should send sigint to the terminal stop the current running processing program before running the new one by sending \"\\x03\" (^C). If true, it essentially presses ctrl+c for you."
        },
        "processing.runPathQuotes": {
          "type": "string",
          "enum": [
            "auto",
            "always"
          ],
          "default": "auto",
          "description": "When the run path should be quoted. If always, the run path will always be quoted. If auto, the extension will attempt to figure out when to quote the path."
        },
        "processing.py.jarPath": {
          "type": "string",
          "default": "processing-py.jar",
          "description": "The location of your processing-py.jar file. You can download it from https://py.processing.org/tutorials/command-line/#requirements."
        },
        "processing.py.javaPath": {
          "type": "string",
          "default": "java",
          "description": "Path to Java. Leave default if you've added java to your path, otherwise enter the path to `java` here. Example: `/usr/bin/java` for Unix, or potentially `C:\\Program Files\\Java\\jdk1.8.0_202\\bin\\javac.exe` for Windows."
        },
        "processing.py.isEnabled": {
          "type": "boolean",
          "default": true,
          "description": "If processing.py features should be enabled or not."
        }
      }
    }
  },
  "displayName": "Processing VSCode",
  "icon": "images/processing.png",
  "publisher": "Luke-zhang-04",
  "workspaces": [
    "."
  ]
}
